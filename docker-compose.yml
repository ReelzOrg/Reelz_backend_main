services:
  neo4jDB: #The name here is changed from neo4j for future connectivity with kubernetes
           #https://stackoverflow.com/a/77261518
    image: neo4j:latest
    restart: unless-stopped # Restart policy
    ports:
      - "7687:7687" # Bolt protocol
      - "7474:7474" # HTTP (Neo4j Browser)
    environment:
      NEO4J_AUTH: "${NEO4J_USERNAME}/${NEO4J_PASSWORD}"
      # NEO4J_server_bolt_listen_address: "0.0.0.0:7687"
      # NEO4J_server_http_listen_address: "0.0.0.0:7474"
      # NEO4J_dbms_connector_bolt_address: "0.0.0.0:7687"
      # NEO4J_dbms_connector_bolt_listen_address: "0.0.0.0"
      # NEO4J_dbms_connector_http_address: "0.0.0.0:7474"
      # NEO4J_dbms_connector_http_listen_address: "0.0.0.0"
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_plugins:/plugins # For plugins like APOC
    
  searxng:
    image: searxng/searxng:latest
    restart: unless-stopped
    ports:
      - "8888:8080"
    volumes:
      - searxng_data:/etc/searxng
    environment:
      - SEARXNG_BASE_URL=http://localhost:8888

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      # --- KRaft Settings ---
      # When initializing a new Kafka cluster in KRaft mode for the very first time, it requires a permanent,
      # unique ID. This ID is stored in the cluster's metadata and prevents nodes from accidentally joining the
      # wrong cluster
      # Use this command to get the Cluster ID: docker run --rm confluentinc/cp-kafka:latest kafka-storage random-uuid
      CLUSTER_ID: 1_3fypONTM2x4k4Hl_MMBg
      KAFKA_PROCESS_ROLES: 'broker,controller'  #In production use only one broker or controller
      KAFKA_NODE_ID: 1
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:9093'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'

      # --- Listener Definitions ---
      KAFKA_LISTENERS: 'INTERNAL://:29092,EXTERNAL://:9092,CONTROLLER://:9093'
      KAFKA_ADVERTISED_LISTENERS: 'INTERNAL://kafka:29092,EXTERNAL://localhost:9092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'INTERNAL'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT'

      # --- Standard Single-Node Settings ---
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
  
  schema-registry:
    image: confluentinc/cp-schema-registry
    container_name: schema-registry
    ports:
      - "8081:8081"
    depends_on: [kafka]
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:29092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081

  connect:
    image: debezium/connect:3.0.0.Final
    ports:
      - "8083:8083"
    depends_on: [kafka]
    environment:
      # Services inside this docker network (this service - debezium/connect) will use port 29092 to connect to kafka
      # Services outside this docker network (like the Node.js server running locally) will use the 9092 port instead
      BOOTSTRAP_SERVERS: kafka:29092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses

volumes:
  searxng_data:
  neo4j_data:
  neo4j_logs:
  neo4j_plugins: